{"version":3,"sources":["Components/NavBar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","rows","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","str","chars","tarray","split","tstr","i","length","replace","RegExp","substring","slice","Alert","alert","word","charAt","capatalise","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.55b1ea09.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\"> {props.title} </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"aria-expanded=\"false\" aria-label=\"Toggle navigation\" ><span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\"> <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"> Home </a></li>\r\n            {/* <li className=\"nav-item\"> <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\"> About Us  </Link></li> */}\r\n            {/* <li className=\"nav-item\"> <Link className=\"nav-link\" to=\"/\"> {props.Link}</Link> </li> */}\r\n            {/* <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" >{props.Dropdown}</a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li> <a className=\"dropdown-item\" href=\"/\"> {props.Action} </a> </li>\r\n                <li><hr className=\"dropdown-divider\" /></li>\r\n                <li> <a className=\"dropdown-item\" href=\"/\"> {props.action1} </a> </li>\r\n              </ul>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch mx-2 text-${props.mode==='light'?'dark':'light' }`}>\r\n            <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n          </div>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired//is required ensures that something must be given\r\n    //don't work when default is given as it fulfill the condition\r\n    // link: PropTypes.string,\r\n    // Dropdown: PropTypes.string,\r\n    // Action: PropTypes.string,\r\n    // action1: PropTypes.string\r\n}\r\n//if props are not written in app.js\r\nNavBar.defaultProps = {\r\n    title: 'Write Title'\r\n    // link: 'Link',\r\n    // Dropdown: 'Dropdown',\r\n    // Action: 'Action',\r\n    // action1: 'Another Action'\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const upperCase = () => {\r\n    // console.log('Upper Case Clicked');\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Upper Case is applied\",\"success\")\r\n  };\r\n  const lowerCase = () => {\r\n    // console.log('Upper Case Clicked');\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log('Change in Textarea');\r\n    setText(event.target.value);\r\n  };\r\n  const handleClear = () => {\r\n    setText('');\r\n  };\r\n  // const handleCopy= ()=>{\r\n  //   let text= document.getElemId(\"exampleFormControlTextarea1\");\r\n  //   text.select();\r\n  //   navigator.clipboard.writeText(text.value);\r\n  // }\r\n  const handleFormat = () => {\r\n    let tarray = text.split(\".\");\r\n    let tstr = '';\r\n    function ltrim(str, chars)\r\n {\r\n  chars = chars || \"\\\\s\";\r\n  return str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\");\r\n }\r\n    for( let i=0; i<tarray.length; i++){\r\n      tarray[i] = ltrim(tarray[i],' ');\r\n      tstr = tstr + tarray[i].substring(0,1).toUpperCase() + tarray[i].slice(1).toLowerCase();\r\n      if(i<(tarray[i].length - 1)){\r\n        tstr= tstr + '. ';\r\n      }\r\n    }\r\n    setText(tstr);\r\n  };\r\n  const [text, setText] = useState(\"Enter your text\");\r\n  // text='new text'----wrong way\r\n  //setText('new text');----correct way\r\n  return (\r\n    <>\r\n    <div className=\"container my-3\"style= {{color : props.mode ==='dark'?'white':'#212529'}}>\r\n      <h1>{props.heading} </h1>\r\n      <textarea  className=\"form-control\"  value={text}  id=\"exampleFormControlTextarea1\"  rows=\"8\"  onChange={handleOnChange} style= {{backgroundColor : props.mode==='dark'?'#212529f5':'white', color : props.mode ==='dark'?'white':'#212529'}} ></textarea>{/*execute when u type in textarea*/} \r\n      <button    className=\"btn btn-primary mx-2\"    onClick={upperCase}  >    To Upper Case  </button> {/*run upperCase function on clicking button*/} \r\n      <button   className=\"btn btn-primary mx-2\"   onClick={lowerCase} >   To Lower Case </button>\r\n      <button   className=\"btn btn-primary mx-2\"   onClick={handleClear} >   Clear </button>\r\n      <button   className=\"btn btn-primary mx-2\"   onClick={handleFormat} >   Format </button>\r\n      {/* <button   className=\"btn btn-primary mx-2\"   onClick={handleCopy} >   Copy </button> */}\r\n    </div>\r\n    <div className=\"container my-3\" style= {{color : props.mode ==='dark'?'white':'#212529'}} >\r\n      <h3>Your text summary</h3>\r\n      <p>Number of words are {text.split(\" \").length} and characters are {text.length}</p>\r\n      <p>Time to read the text will be {0.08 * text.split(\" \").length} minutes</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    const capatalise = (word)=>{\r\n        let text = word.toLowerCase();\r\n        return text.charAt(0).toUpperCase()+text.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n   <strong>{capatalise(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  );\r\n}","import \"./App.css\";\n// import About from \"./Components/About\";\nimport NavBar from \"./Components/NavBar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, {useState } from 'react';\nimport Alert from \"./Components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const toggleMode = ()=>{\n    if (mode === 'light') {\n      setMode ('dark')\n      document.body.style.backgroundColor = '#212529eb';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title = 'TextUtils-DarkMode'\n    }\n    else{\n      setMode ( 'light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.title = 'TextUtils Home'\n      setInterval(() => {\n        document.title = 'Download TextUtils now '\n      }, 2000);\n    }\n  }\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=> {\n    setAlert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <NavBar title='TextUtils'  mode={mode} toggleMode= {toggleMode}  />\n      <Alert alert={alert}/>\n        {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n     {/*        </Route> */}\n            {/*  <Route exact path=\"/\"> */}\n              <TextForm heading=\"Write your text below\" mode={mode} showAlert={showAlert}/>\n            {/* </Route> */}\n        {/* </Switch> */}\n      {/*  </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}